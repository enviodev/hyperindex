{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Envio Config Schema",
  "description": "Schema for a YAML config for an envio indexer",
  "type": "object",
  "properties": {
    "description": {
      "description": "Description of the project",
      "type": [
        "string",
        "null"
      ]
    },
    "contracts": {
      "description": "Global contract definitions that must contain all definitions except addresses. You can share a single handler/abi/event definitions for contracts across multiple chains.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "$ref": "#/$defs/GlobalContract_for_ContractConfig"
      }
    },
    "ecosystem": {
      "description": "Ecosystem of the project.",
      "anyOf": [
        {
          "$ref": "#/$defs/EcosystemTag"
        },
        {
          "type": "null"
        }
      ]
    },
    "event_decoder": {
      "description": "The event decoder to use for the indexer (default: hypersync-client)",
      "anyOf": [
        {
          "$ref": "#/$defs/EventDecoder"
        },
        {
          "type": "null"
        }
      ]
    },
    "field_selection": {
      "description": "An object representing additional fields to add to the event passed to handlers.",
      "anyOf": [
        {
          "$ref": "#/$defs/FieldSelection"
        },
        {
          "type": "null"
        }
      ]
    },
    "name": {
      "description": "Name of the project",
      "type": "string"
    },
    "networks": {
      "description": "Configuration of the blockchain networks that the project is deployed on.",
      "type": "array",
      "items": {
        "$ref": "#/$defs/Network"
      }
    },
    "raw_events": {
      "description": "If true, the indexer will store the raw event data in the database. This is useful for debugging, but will increase the size of the database and the amount of time it takes to process events (default: false)",
      "type": [
        "boolean",
        "null"
      ]
    },
    "rollback_on_reorg": {
      "description": "A flag to indicate if the indexer should rollback to the last known valid block on a reorg (default: false)",
      "type": [
        "boolean",
        "null"
      ]
    },
    "save_full_history": {
      "description": "A flag to indicate if the indexer should save the full history of events. This is useful for debugging but will increase the size of the database (default: false)",
      "type": [
        "boolean",
        "null"
      ]
    },
    "schema": {
      "description": "Custom path to config file",
      "type": [
        "string",
        "null"
      ]
    },
    "unordered_multichain_mode": {
      "description": "A flag to indicate if the indexer should use a single queue for all chains or a queue per chain (default: false)",
      "type": [
        "boolean",
        "null"
      ]
    }
  },
  "additionalProperties": false,
  "required": [
    "name",
    "networks"
  ],
  "$defs": {
    "Addresses": {
      "anyOf": [
        {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "integer",
              "format": "uint",
              "minimum": 0
            }
          ]
        },
        {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer",
                "format": "uint",
                "minimum": 0
              }
            ]
          }
        }
      ]
    },
    "BlockField": {
      "type": "string",
      "enum": [
        "parent_hash",
        "nonce",
        "sha3_uncles",
        "logs_bloom",
        "transactions_root",
        "state_root",
        "receipts_root",
        "miner",
        "difficulty",
        "total_difficulty",
        "extra_data",
        "size",
        "gas_limit",
        "gas_used",
        "uncles",
        "base_fee_per_gas"
      ]
    },
    "EcosystemTag": {
      "type": "string",
      "enum": [
        "evm"
      ]
    },
    "EventConfig": {
      "type": "object",
      "properties": {
        "event": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "event"
      ]
    },
    "EventDecoder": {
      "type": "string",
      "enum": [
        "viem",
        "hypersync-client"
      ]
    },
    "FieldSelection": {
      "type": "object",
      "properties": {
        "block_fields": {
          "description": "Fields of a block to add to the event passed to handlers",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/$defs/BlockField"
          }
        },
        "transaction_fields": {
          "description": "Fields of a transaction to add to the event passed to handlers",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/$defs/TransactionField"
          }
        }
      },
      "additionalProperties": false
    },
    "GlobalContract_for_ContractConfig": {
      "type": "object",
      "properties": {
        "abi_file_path": {
          "type": [
            "string",
            "null"
          ]
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/EventConfig"
          }
        },
        "handler": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "name",
        "handler",
        "events"
      ]
    },
    "HypersyncConfig": {
      "type": "object",
      "properties": {
        "url": {
          "description": "URL of the HyperSync endpoint (default: The most performant HyperSync endpoint for the network)",
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "url"
      ]
    },
    "Network": {
      "type": "object",
      "properties": {
        "confirmed_block_threshold": {
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        },
        "contracts": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/NetworkContract_for_ContractConfig"
          }
        },
        "end_block": {
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        },
        "hypersync_config": {
          "description": "Optional HyperSync Config for additional fine-tuning",
          "anyOf": [
            {
              "$ref": "#/$defs/HypersyncConfig"
            },
            {
              "type": "null"
            }
          ]
        },
        "id": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "rpc_config": {
          "description": "RPC Config that will be used to subscribe to blockchain data on this network (TIP: This is optional and in most cases does not need to be specified if the network is supported with HyperSync. We recommend using HyperSync instead of RPC for 100x speed-up)",
          "anyOf": [
            {
              "$ref": "#/$defs/RpcConfig"
            },
            {
              "type": "null"
            }
          ]
        },
        "start_block": {
          "type": "integer",
          "format": "int32"
        }
      },
      "additionalProperties": false,
      "required": [
        "id",
        "start_block",
        "contracts"
      ]
    },
    "NetworkContract_for_ContractConfig": {
      "type": "object",
      "properties": {
        "abi_file_path": {
          "type": [
            "string",
            "null"
          ]
        },
        "address": {
          "$ref": "#/$defs/Addresses"
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/EventConfig"
          }
        },
        "handler": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "name"
      ]
    },
    "RpcConfig": {
      "type": "object",
      "properties": {
        "unstable__sync_config": {
          "anyOf": [
            {
              "$ref": "#/$defs/SyncConfigUnstable"
            },
            {
              "type": "null"
            }
          ]
        },
        "url": {
          "description": "URL of the RPC endpoint. Can be a single URL or an array of URLs. If multiple URLs are provided, the first one will be used as the primary RPC endpoint and the rest will be used as fallbacks.",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        }
      },
      "additionalProperties": false,
      "required": [
        "url"
      ]
    },
    "SyncConfigUnstable": {
      "type": "object",
      "properties": {
        "acceleration_additive": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint32",
          "minimum": 0
        },
        "backoff_millis": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint32",
          "minimum": 0
        },
        "backoff_multiplicative": {
          "type": [
            "number",
            "null"
          ],
          "format": "double"
        },
        "fallback_stall_timeout": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint32",
          "minimum": 0
        },
        "initial_block_interval": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint32",
          "minimum": 0
        },
        "interval_ceiling": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint32",
          "minimum": 0
        },
        "query_timeout_millis": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint32",
          "minimum": 0
        }
      },
      "additionalProperties": false
    },
    "TransactionField": {
      "type": "string",
      "enum": [
        "transaction_index",
        "hash",
        "from",
        "to",
        "gas",
        "gas_price",
        "max_priority_fee_per_gas",
        "max_fee_per_gas",
        "cumulative_gas_used",
        "effective_gas_price",
        "gas_used",
        "input",
        "nonce",
        "value",
        "v",
        "r",
        "s",
        "contract_address",
        "logs_bloom",
        "type",
        "root",
        "status",
        "sighash"
      ]
    }
  }
}
