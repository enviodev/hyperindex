{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Envio Config Schema",
  "description": "Schema for a YAML config for an envio indexer",
  "type": "object",
  "properties": {
    "description": {
      "description": "Description of the project",
      "type": [
        "string",
        "null"
      ]
    },
    "contracts": {
      "description": "Global contract definitions that must contain all definitions except addresses. You can share a single handler/abi/event definitions for contracts across multiple chains.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "$ref": "#/$defs/GlobalContract_for_ContractConfig"
      }
    },
    "ecosystem": {
      "description": "Ecosystem of the project.",
      "$ref": "#/$defs/EcosystemTag"
    },
    "name": {
      "description": "Name of the project",
      "type": "string"
    },
    "networks": {
      "description": "Configuration of the blockchain networks that the project is deployed on.",
      "type": "array",
      "items": {
        "$ref": "#/$defs/Network"
      }
    },
    "schema": {
      "description": "Custom path to config file",
      "type": [
        "string",
        "null"
      ]
    }
  },
  "additionalProperties": false,
  "required": [
    "name",
    "ecosystem",
    "networks"
  ],
  "$defs": {
    "Addresses": {
      "anyOf": [
        {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "integer",
              "format": "uint",
              "minimum": 0
            }
          ]
        },
        {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer",
                "format": "uint",
                "minimum": 0
              }
            ]
          }
        }
      ]
    },
    "EcosystemTag": {
      "type": "string",
      "enum": [
        "fuel"
      ]
    },
    "EventConfig": {
      "type": "object",
      "properties": {
        "logId": {
          "description": "A reference to a log_id in the ABI",
          "type": [
            "string",
            "null"
          ]
        },
        "name": {
          "description": "A reference to a struct in the ABI or a unique name for the provided log_id",
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "name"
      ]
    },
    "GlobalContract_for_ContractConfig": {
      "type": "object",
      "properties": {
        "abi_file_path": {
          "description": "Relative path (from config) to a json abi.",
          "type": "string"
        },
        "events": {
          "description": "A list of events that should be indexed on this contract",
          "type": "array",
          "items": {
            "$ref": "#/$defs/EventConfig"
          }
        },
        "handler": {
          "description": "The relative path to a file where handlers are registered for the given contract",
          "type": "string"
        },
        "name": {
          "description": "A unique project-wide name for this contract (no spaces)",
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "name",
        "abi_file_path",
        "handler",
        "events"
      ]
    },
    "Network": {
      "type": "object",
      "properties": {
        "contracts": {
          "description": "All the contracts that should be indexed on the given network",
          "type": "array",
          "items": {
            "$ref": "#/$defs/NetworkContract_for_ContractConfig"
          }
        },
        "end_block": {
          "description": "The block at which the indexer should terminate.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        },
        "id": {
          "description": "Public chain/network id",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "start_block": {
          "description": "The block at which the indexer should start ingesting data",
          "type": "integer",
          "format": "int32"
        }
      },
      "additionalProperties": false,
      "required": [
        "id",
        "start_block",
        "contracts"
      ]
    },
    "NetworkContract_for_ContractConfig": {
      "type": "object",
      "properties": {
        "abi_file_path": {
          "description": "Relative path (from config) to a json abi.",
          "type": "string"
        },
        "address": {
          "description": "A single address or a list of addresses to be indexed. This can be left as null in the case where this contracts addresses will be registered dynamically.",
          "$ref": "#/$defs/Addresses"
        },
        "events": {
          "description": "A list of events that should be indexed on this contract",
          "type": "array",
          "items": {
            "$ref": "#/$defs/EventConfig"
          }
        },
        "handler": {
          "description": "The relative path to a file where handlers are registered for the given contract",
          "type": "string"
        },
        "name": {
          "description": "A unique project-wide name for this contract if events and handler are defined OR a reference to the name of contract defined globally at the top level",
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "name"
      ]
    }
  }
}
