import type { Logger, EffectCaller } from "envio";
import type * as Entities from "./db/Entities.gen.ts";

export type LoaderContext = {
  /**
   * Access the logger instance with event as a context. The logs will be displayed in the console and Envio Hosted Service.
   */
  readonly log: Logger;
  /**
   * Call the provided Effect with the given input.
   * Effects are the best for external calls with automatic deduplication, error handling and caching.
   * Define a new Effect using createEffect outside of the handler.
   */
  readonly effect: EffectCaller;
  {{#each entities as | entity |}}
  readonly {{entity.name.original}}: {
    /**
     * Load the entity {{entity.name.original}} from the storage by ID.
     * If the entity is not found, returns undefined.
     */
    readonly get: (id: string) => Promise<Entities.{{entity.name.capitalized}}_t | undefined>,
    readonly getWhere: Entities.{{entity.name.capitalized}}_indexedFieldOperations,
  }
  {{/each}}
};
