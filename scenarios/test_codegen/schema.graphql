enum AccountType {
  ADMIN
  USER
}

type User {
  id: ID!
  address: Bytes!
  gravatar: Gravatar
  updatesCountOnUserForTesting: Int!
  tokens: [Token!]! @derivedFrom(field: "owner")
  accountType: AccountType!
}

enum GravatarSize {
  SMALL
  MEDIUM
  LARGE
}

type Gravatar {
  id: ID!
  owner: User!
  displayName: String!
  imageUrl: String!
  updatesCount: BigInt!
  size: GravatarSize!
}

type NftCollection {
  id: ID!
  contractAddress: Bytes!
  name: String!
  symbol: String!
  maxSupply: BigInt!
  currentSupply: Int!
  tokens: [Token!]! @derivedFrom(field: "collection")
}

type Token
  @index(fields: ["db_write_timestamp"])
  @index(fields: ["id", "tokenId"])
  @index(fields: ["tokenId", "collection"]) {
  id: ID!
  tokenId: BigInt! @index
  collection: NftCollection! @index
  owner: User!
}

type EntityWithFields {
  id: ID!
  bigDecimal: BigDecimal!
}

type A {
  id: ID!
  b: B! @index
  optionalStringToTestLinkedEntities: String
}
type B {
  id: ID!
  a: [A!]! @derivedFrom(field: "b")
  c: C
}
type C {
  id: ID!
  a: A!
  stringThatIsMirroredToA: String!
  d: [D!]! @derivedFrom(field: "c")
}
type D {
  id: ID!
  c: ID! @index
}
